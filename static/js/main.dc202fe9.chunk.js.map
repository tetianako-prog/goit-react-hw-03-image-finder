{"version":3,"sources":["services/photo-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/App/App.js","index.js"],"names":["API_KEY","axios","defaults","baseURL","photoApi","getPhotos","searchQuery","currentPage","get","then","res","data","hits","Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","onSubmit","props","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","url","modalHandle","largeImageURL","onClick","src","alt","ImageGallery","photos","map","id","webformatURL","Button","onClickFunc","modalRoot","document","querySelector","Modal","handleKeyDown","onClose","code","handleBackdropClick","event","target","window","addEventListener","removeEventListener","largeUrl","createPortal","App","isLoading","error","showModal","onChangeQuery","toggleModal","prevState","fetchPhotos","photosToAdd","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","prevProps","shouldRenderLoadMoreButton","length","message","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"wZAEMA,EAAU,qCAChBC,IAAMC,SAASC,QAAU,2BAEzB,IASeC,EAFE,CAAEC,UAPD,SAACC,GAAkC,IAArBC,EAAoB,uDAAN,EAC5C,OAAON,IACJO,IADI,eAEKR,EAFL,cAEkBM,EAFlB,kCAEuDC,EAFvD,wCAIJE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,U,eCuCXC,E,4MAxCbC,MAAQ,CACNC,MAAO,I,EAGTC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZH,MAAOE,EAAEE,cAAcC,S,EAI3BC,aAAe,SAAAJ,GACbA,EAAEK,kBAGFC,EAFqB,EAAKC,MAAlBD,UACU,EAAKT,MAAfC,OAER,EAAKG,SAAS,CAAEH,MAAO,M,4CAGzB,WACE,OACE,wBAAQU,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaF,SAAUG,KAAKL,aAA5C,UACE,wBAAQM,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVE,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUL,KAAKV,wB,GArCHgB,aCiBTC,G,YAjBU,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cAI5C,OACE,oBAAIX,UAAU,mBAAmBY,QAJf,WAClBF,EAAYC,IAGZ,SACE,qBAAKE,IAAKJ,EAAKK,IAAI,GAAGd,UAAU,+BCqBvBe,EA1BM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQN,EAAkB,EAAlBA,YAC9B,OACE,oBAAIV,UAAU,eAAd,SACGgB,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcR,EAArB,EAAqBA,cAArB,OACV,cAAC,EAAD,CAEEF,IAAKU,EACLT,YAAaA,EACbC,cAAeA,GAHVO,SCMAE,G,MAZA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAChB,OACE,wBAAQrB,UAAU,SAASE,KAAK,SAASU,QAAS,kBAAMS,KAAxD,yB,iBCDEC,G,YAAYC,SAASC,cAAc,gBA0C1BC,E,4MA3BbC,cAAgB,SAAAlC,GACd,IAAQmC,EAAY,EAAK5B,MAAjB4B,QACO,WAAXnC,EAAEoC,MACJD,K,EAIJE,oBAAsB,SAAAC,GACpB,IAAQH,EAAY,EAAK5B,MAAjB4B,QACJG,EAAMpC,gBAAkBoC,EAAMC,QAChCJ,K,uDAlBJ,WACEK,OAAOC,iBAAiB,UAAWhC,KAAKyB,iB,kCAG1C,WACEM,OAAOE,oBAAoB,UAAWjC,KAAKyB,iB,oBAiB7C,WACE,IAAQS,EAAalC,KAAKF,MAAlBoC,SACR,OAAOC,uBACL,qBAAKpC,UAAU,UAAUY,QAASX,KAAK4B,oBAAvC,SACE,qBAAK7B,UAAU,QAAf,SACE,qBAAKa,IAAKsB,EAAUrB,IAAI,SAG5BQ,O,GAnCcf,aC2FL8B,E,4MAvFbhD,MAAQ,CACN2B,OAAQ,GACRlC,YAAa,EACbD,YAAa,GACbyD,WAAW,EACXC,MAAO,KACPC,WAAW,EACXL,SAAU,I,EASZM,cAAgB,SAAAnD,GACd,EAAKG,SAAS,CACZZ,YAAaS,EACbR,YAAa,EACbkC,OAAQ,GACRuB,MAAO,Q,EAIXG,YAAc,SAAAjC,GACZ,EAAKhB,UAAS,SAAAkD,GAAS,MAAK,CAC1BH,WAAYG,EAAUH,UACtBL,SAAU1B,O,EAIdmC,YAAc,WACZ,MAAqC,EAAKvD,MAAlCR,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YACrB,EAAKW,SAAS,CAAE6C,WAAW,IAC3B3D,EACGC,UAAUC,EAAaC,GACvBE,MAAK,SAAAgC,GACJ,IAAM6B,EAAc7B,EAAOC,KACzB,kBAA0C,CACxCC,GADF,EAAGA,GAEDC,aAFF,EAAOA,aAGLR,cAHF,EAAqBA,kBAMvB,EAAKlB,UAAS,SAAAkD,GAAS,MAAK,CAC1B3B,OAAO,GAAD,mBAAM2B,EAAU3B,QAAhB,YAA2B6B,IACjC/D,YAAa6D,EAAU7D,YAAc,MAEvCkD,OAAOc,SAAS,CACdC,IAAKxB,SAASyB,gBAAgBC,aAC9BC,SAAU,cAGbC,OAAM,SAAAZ,GAAK,OAAI,EAAK9C,SAAS,CAAE8C,aAC/Ba,SAAQ,kBAAM,EAAK3D,SAAS,CAAE6C,WAAW,Q,wDA7C9C,SAAmBe,EAAWV,GACxBA,EAAU9D,cAAgBoB,KAAKZ,MAAMR,aACvCoB,KAAK2C,gB,oBA8CT,WACE,MAA0D3C,KAAKZ,MAAvDmD,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,MAAOJ,EAArC,EAAqCA,SAAUnB,EAA/C,EAA+CA,OACzCsC,EACJrD,KAAKZ,MAAM2B,OAAOuC,OAAS,IAAMtD,KAAKZ,MAAMiD,UAC9C,OACE,qCACGE,GAAa,cAAC,EAAD,CAAOL,SAAUA,EAAUR,QAAS1B,KAAKyC,cACvD,sBAAK1C,UAAU,MAAf,UACE,cAAC,EAAD,CAAWF,SAAUG,KAAKwC,gBACzBF,GAAS,+DAAkCA,EAAMiB,WAClD,cAAC,EAAD,CAAcxC,OAAQA,EAAQN,YAAaT,KAAKyC,iBAEjDJ,GACC,cAAC,IAAD,CACEpC,KAAK,OACLuD,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAGZN,GACC,cAAC,EAAD,CAAQjC,YAAapB,KAAK2C,qB,GAjFlBrC,aCJlBsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASyC,eAAe,W","file":"static/js/main.dc202fe9.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '20559470-5ee6005a5b9d05f63754ea23b';\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\n\r\nconst getPhotos = (searchQuery, currentPage = 1) => {\r\n  return axios\r\n    .get(\r\n      `?key=${API_KEY}&q=${searchQuery}&image_type=photo&page=${currentPage}&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(res => res.data.hits);\r\n};\r\nconst photoApi = { getPhotos };\r\n\r\nexport default photoApi;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Searchbar.scss';\r\n\r\nclass Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      query: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { onSubmit } = this.props;\r\n    const { query } = this.state;\r\n    onSubmit(query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.scss';\r\n\r\nconst ImageGalleryItem = ({ url, modalHandle, largeImageURL }) => {\r\n  const handleModal = () => {\r\n    modalHandle(largeImageURL);\r\n  };\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={handleModal}>\r\n      <img src={url} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  modalHandle: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGallery.scss';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ photos, modalHandle }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {photos.map(({ id, webformatURL, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          url={webformatURL}\r\n          modalHandle={modalHandle}\r\n          largeImageURL={largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  photos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  modalHandle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.scss';\r\n\r\nconst Button = ({ onClickFunc }) => {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={() => onClickFunc()}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClickFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    const { onClose } = this.props;\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    const { onClose } = this.props;\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeUrl } = this.props;\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={largeUrl} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport photoApi from '../../services/photo-api';\nimport Searchbar from '../Searchbar/Searchbar';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Button from '../Button/Button';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Modal from '../Modal/Modal';\n\nclass App extends Component {\n  state = {\n    photos: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    showModal: false,\n    largeUrl: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchPhotos();\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      photos: [],\n      error: null,\n    });\n  };\n\n  toggleModal = url => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n      largeUrl: url,\n    }));\n  };\n\n  fetchPhotos = () => {\n    const { searchQuery, currentPage } = this.state;\n    this.setState({ isLoading: true });\n    photoApi\n      .getPhotos(searchQuery, currentPage)\n      .then(photos => {\n        const photosToAdd = photos.map(\n          ({ id, webformatURL, largeImageURL }) => ({\n            id,\n            webformatURL,\n            largeImageURL,\n          }),\n        );\n        this.setState(prevState => ({\n          photos: [...prevState.photos, ...photosToAdd],\n          currentPage: prevState.currentPage + 1,\n        }));\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { showModal, isLoading, error, largeUrl, photos } = this.state;\n    const shouldRenderLoadMoreButton =\n      this.state.photos.length > 0 && !this.state.isLoading;\n    return (\n      <>\n        {showModal && <Modal largeUrl={largeUrl} onClose={this.toggleModal} />}\n        <div className=\"App\">\n          <Searchbar onSubmit={this.onChangeQuery} />\n          {error && <p>Whoops, something went wrong: {error.message}</p>}\n          <ImageGallery photos={photos} modalHandle={this.toggleModal} />\n        </div>\n        {isLoading && (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        )}\n        {shouldRenderLoadMoreButton && (\n          <Button onClickFunc={this.fetchPhotos} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './common.scss';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}